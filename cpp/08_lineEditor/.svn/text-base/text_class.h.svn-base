using namespace std;
const int FILENAME_LENGTH = 256;
const int MAX_LINES = 100;
const int MAX_COLUMNS = 100;

typedef char filename[FILENAME_LENGTH];
typedef char textline[MAX_COLUMNS+1];

class text_ed {
	private:
		textline document[MAX_LINES+1];
		textline buffer[MAX_LINES+1];
		int line_length[MAX_LINES+1];
		int buffer_line_length[MAX_LINES+1];
		int last_line,buffer_last_line;
		filename current_file;
		bool line_numbering;
		bool copy_to_buffer(int start, int end);
		bool close_up (int start, int end);
		bool copy_to_document(int start);
		bool open_up(int start, int num_lines);
		int  strindex(char* haystack, char* needle);
		bool strncopy(char * dest, int loc, char * src, int n);
		
	public:
		text_ed();
		
		bool load_file(filename);
		bool save_file();
		bool save_file(filename);
		bool insert_line(textline src,int n);
		bool delete_lines(int start, int end);
		bool get_line(textline dest, int n);
		bool copy_lines(int start, int end, int location);
		bool move_lines(int start, int end, int location);
		bool replace(char * oldstr, char * newstr, int location);
		
		// Getters & Setters
		bool get_lineNumbering();
		void toggle_lineNumbering();
		void get_filename(filename);
		int get_last_line();
		
<<<<<<< .mine
		bool display_file(int, int);
=======
		bool display_file(textline, int);
>>>>>>> .r117
};
